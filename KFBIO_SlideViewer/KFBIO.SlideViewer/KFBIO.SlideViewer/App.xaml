<Application x:Class="KFBIO.SlideViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KFBIO.SlideViewer"
             xmlns:lang="clr-namespace:LanguageLib;assembly=LanguageLib" >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="themes/kfbioblue.xaml" />
                <ResourceDictionary Source="/KFBIO.DeepZoomSource;component/themes/generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <lang:LocalizedStrings x:Key="Lang" />

            <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="ContextMenu.HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Name="Border" Background="#FF004A84" BorderBrush="#888888" Opacity="0.9" CornerRadius="4" BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ContextMenu.HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="Border.Padding" Value="0,0,0,0" />
                                    <Setter TargetName="Border" Property="Border.CornerRadius" Value="4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="2" />
                <Setter Property="Margin" Value="0,2,0,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderThickness="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint=".25,.5" EndPoint="1,.5">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="Transparent" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border">
                    <Grid>
                        <ContentPresenter Margin="6,0,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FF004A84" BorderBrush="#888888" BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                        <Setter TargetName="Popup" Property="Popup.PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Border.Background" Value="#FF008000" />
                        <Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Border.CornerRadius" Value="0,0,4,4" />
                        <Setter TargetName="SubmenuBorder" Property="Border.Padding" Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Control.Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border">
                    <Grid>
                        <ContentPresenter Margin="20,0,6,10" ContentSource="Header" RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Border.Background" Value="#FF0000FF" />
                        <Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Control.Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border" BorderThickness="2" CornerRadius="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="Icon" Margin="6,0,6,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentSource="Icon" />
                        <Border Name="Check" Width="1" Height="1" Visibility="Hidden" Margin="6,0,6,0" Background="#C0C0C0" BorderThickness="1" BorderBrush="#404040">
                            <Path Name="CheckMark" Width="1" Height="1" Visibility="Visible" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="1" Data="M0,0 L7,7 M0,7 L7,0" />
                        </Border>
                        <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                        <TextBlock Name="InputGestureText" Grid.Column="2" Background="#00FFFFFF" Text="{TemplateBinding InputGestureText}" Margin="5,0,0,2" DockPanel.Dock="Right" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsCheckable" Value="True">
                        <Setter TargetName="Check" Property="UIElement.Visibility" Value="Hidden" />
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Border.Background" Value="#FF008000" />
                        <Setter TargetName="Border" Property="Border.BorderBrush" Value="#404040" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Control.Foreground" Value="#FFC0C0C0" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border" BorderThickness="2" CornerRadius="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Name="Icon" Margin="6,0,6,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentSource="Icon" />
                        <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                        <TextBlock Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
                        <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,7 L4,3.5" Fill="#404040" />
                        <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FF004A84" BorderBrush="#888888" BorderThickness="1" Opacity="0.9">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Border.Background" Value="#FF008000" />
                        <Setter TargetName="Border" Property="Border.BorderBrush" Value="#404040" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="Border.CornerRadius" Value="4" />
                        <Setter TargetName="SubmenuBorder" Property="Border.Padding" Value="0,3,0,3" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Control.Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                    </Trigger>
                    <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
